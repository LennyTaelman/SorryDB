[
  null,
  {
    "file": "FLT/DivisionAlgebra/Finiteness.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 38,
          "column": 87
        },
        "goal": "K : Type u_1\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : NumberField K\nD : Type u_2\ninst\u271d\u00b9 : DivisionRing D\ninst\u271d : Algebra K D\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde K) K) (D \u2297[K] FiniteAdeleRing (\ud835\udcde K) K)",
        "endPos": {
          "line": 38,
          "column": 92
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 70,
          "column": 2
        },
        "goal": "K : Type u_1\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : NumberField K\nD : Type u_2\ninst\u271d\u00b3 : DivisionRing D\ninst\u271d\u00b2 : Algebra K D\ninst\u271d\u00b9 : FiniteDimensional K D\ninst\u271d : Algebra.IsCentral K D\nU : Subgroup (Dfx K D)\nhU : IsOpen \u2191U\n\u22a2 Finite (Doset.Quotient (Set.range \u21d1(incl\u2081 K D)) \u2191U)",
        "endPos": {
          "line": 70,
          "column": 7
        }
      }
    ]
  },
  {
    "file": "FLT/EllipticCurve/Torsion.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 35,
          "column": 26
        },
        "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\n\u22a2 \u2200 (x : E.n_torsion n), n \u2022 x = 0",
        "endPos": {
          "line": 35,
          "column": 31
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 39,
          "column": 91
        },
        "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\nhn : 0 < n\n\u22a2 Finite (E.n_torsion n)",
        "endPos": {
          "line": 39,
          "column": 96
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 44,
          "column": 38
        },
        "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 Nat.card (E.n_torsion n) = n ^ 2",
        "endPos": {
          "line": 44,
          "column": 43
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 49,
          "column": 66
        },
        "goal": "d : \u2115\nA : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 \u2203 \u03c6, True",
        "endPos": {
          "line": 49,
          "column": 71
        }
      },
      {
        "proofState": 4,
        "pos": {
          "line": 55,
          "column": 56
        },
        "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 \u2203 \u03c6, True",
        "endPos": {
          "line": 55,
          "column": 61
        }
      },
      {
        "proofState": 5,
        "pos": {
          "line": 61,
          "column": 40
        },
        "goal": "k : Type u\ninst\u271d\u2075 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2074 : E.IsElliptic\nK L : Type u\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra k K\ninst\u271d : Algebra k L\nf : K \u2192\u2090[k] L\n\u22a2 E\u27eeK\u27ef \u2192+ E\u27eeL\u27ef",
        "endPos": {
          "line": 61,
          "column": 45
        }
      },
      {
        "proofState": 6,
        "pos": {
          "line": 64,
          "column": 73
        },
        "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 map E (AlgHom.id k K) = AddMonoidHom.id E\u27eeK\u27ef",
        "endPos": {
          "line": 64,
          "column": 78
        }
      },
      {
        "proofState": 7,
        "pos": {
          "line": 69,
          "column": 48
        },
        "goal": "k : Type u\ninst\u271d\u2077 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2076 : E.IsElliptic\nK L M : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : Field M\ninst\u271d\u00b2 : Algebra k K\ninst\u271d\u00b9 : Algebra k L\ninst\u271d : Algebra k M\nf : K \u2192\u2090[k] L\ng : L \u2192\u2090[k] M\n\u22a2 (map E g).comp (map E f) = map E (g.comp f)",
        "endPos": {
          "line": 69,
          "column": 53
        }
      },
      {
        "proofState": 8,
        "pos": {
          "line": 73,
          "column": 44
        },
        "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 DistribMulAction (K \u2243\u2090[k] K) E\u27eeK\u27ef",
        "endPos": {
          "line": 73,
          "column": 49
        }
      },
      {
        "proofState": 9,
        "pos": {
          "line": 77,
          "column": 59
        },
        "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nn : \u2115\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 Representation (ZMod n) (K \u2243\u2090[k] K) (E.n_torsion n)",
        "endPos": {
          "line": 77,
          "column": 64
        }
      }
    ]
  },
  {
    "file": "FLT/Basic/Reductions.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 324,
          "column": 93
        },
        "goal": "P : FreyPackage\n\u22a2 IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
        "endPos": {
          "line": 324,
          "column": 98
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 334,
          "column": 95
        },
        "goal": "P : FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
        "endPos": {
          "line": 334,
          "column": 100
        }
      }
    ]
  },
  {
    "file": "FLT/MathlibExperiments/IsFrobenius.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 116,
          "column": 2
        },
        "goal": "p : \u2115\ninst\u271d\u00b9\u2075 : Fact (Nat.Prime p)\nA K L B : Type\ninst\u271d\u00b9\u2074 : CommRing A\ninst\u271d\u00b9\u00b3 : CommRing B\ninst\u271d\u00b9\u00b2 : Algebra A B\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Algebra A K\ninst\u271d\u2078 : IsFractionRing A K\ninst\u271d\u2077 : Algebra B L\ninst\u271d\u2076 : Algebra K L\ninst\u271d\u2075 : Algebra A L\ninst\u271d\u2074 : IsScalarTower A B L\ninst\u271d\u00b3 : IsScalarTower A K L\ninst\u271d\u00b2 : IsIntegralClosure B A L\ninst\u271d\u00b9 : NumberField K\nP : Ideal (\ud835\udcde K)\ninst\u271d : P.IsMaximal\n\u22a2 Fintype (\ud835\udcde K \u29f8 P)",
        "endPos": {
          "line": 116,
          "column": 7
        }
      }
    ]
  },
  null,
  {
    "file": "FLT/HaarMeasure/MeasurableSpacePadics.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 67,
          "column": 87
        },
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\ns : Set \u2124_[p]\n\u22a2 volume (Subtype.val '' s) = volume s",
        "endPos": {
          "line": 67,
          "column": 92
        }
      }
    ]
  },
  {
    "file": "FLT/GlobalLanglandsConjectures/GLnDefs.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 91,
          "column": 53
        },
        "goal": "R : Type u_1\nK : Type u_2\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : IsDedekindDomain R\ninst\u271d\u00b2 : Field K\ninst\u271d\u00b9 : Algebra R K\ninst\u271d : IsFractionRing R K\nv : HeightOneSpectrum R\n\u22a2 TopologicalSpace (FiniteAdeleRing \u2124 \u211a)",
        "endPos": {
          "line": 91,
          "column": 58
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 94,
          "column": 87
        },
        "goal": "R : Type u_1\nK : Type u_2\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : IsDedekindDomain R\ninst\u271d\u00b2 : Field K\ninst\u271d\u00b9 : Algebra R K\ninst\u271d : IsFractionRing R K\nv : HeightOneSpectrum R\n\u22a2 TopologicalRing (FiniteAdeleRing \u2124 \u211a)",
        "endPos": {
          "line": 94,
          "column": 92
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 238,
          "column": 51
        },
        "goal": "n : \u2115\nG : Type\ninst\u271d\u2075 : TopologicalSpace G\ninst\u271d\u2074 : Group G\nE : Type\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \u211d E\ninst\u271d\u00b9 : ChartedSpace E G\ninst\u271d : LieGroup \ud835\udcd8(\u211d, E) \u22a4 G\n\u22a2 Module \u2102 C^\u2191\u22a4\u27ee\ud835\udcd8(\u211d, E), G; \ud835\udcd8(\u211d, \u2102), \u2102\u27ef",
        "endPos": {
          "line": 238,
          "column": 56
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 248,
          "column": 81
        },
        "goal": "n : \u2115\nG : Type\ninst\u271d\u2075 : TopologicalSpace G\ninst\u271d\u2074 : Group G\nE : Type\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \u211d E\ninst\u271d\u00b9 : ChartedSpace E G\ninst\u271d : LieGroup \ud835\udcd8(\u211d, E) \u22a4 G\n\u22a2 \u21a5(Z G E) \u2192\u2090[\u2102] Module.End \u2102 C^\u2191\u22a4\u27ee\ud835\udcd8(\u211d, E), G; \ud835\udcd8(\u211d, \u2102), \u2102\u27ef",
        "endPos": {
          "line": 248,
          "column": 86
        }
      }
    ]
  },
  {
    "file": "FLT/GlobalLanglandsConjectures/GLzero.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 50,
          "column": 58
        },
        "goal": "n : \u2115\n\u03c1 : Weight n\n\u22a2 Prop",
        "endPos": {
          "line": 50,
          "column": 63
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 83,
          "column": 21
        },
        "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
        "endPos": {
          "line": 83,
          "column": 26
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 127,
          "column": 19
        },
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 IsSmooth fun x => z",
        "endPos": {
          "line": 127,
          "column": 24
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 128,
          "column": 21
        },
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (g : GL (Fin n) \u211a) (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)) (y : GL (Fin n) \u211d),\n    (fun x => z)\n        (((algebraMap \u211a (DedekindDomain.FiniteAdeleRing \u2124 \u211a)).GL (Fin n)) g * x, ((algebraMap \u211a \u211d).GL (Fin n)) g * y) =\n      (fun x => z) (x, y)",
        "endPos": {
          "line": 128,
          "column": 26
        }
      },
      {
        "proofState": 4,
        "pos": {
          "line": 129,
          "column": 30
        },
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)), IsSlowlyIncreasing fun y => (fun x => z) (x, y)",
        "endPos": {
          "line": 129,
          "column": 35
        }
      },
      {
        "proofState": 5,
        "pos": {
          "line": 131,
          "column": 26
        },
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2203 U, IsConstantOn U fun x => z",
        "endPos": {
          "line": 131,
          "column": 31
        }
      },
      {
        "proofState": 6,
        "pos": {
          "line": 130,
          "column": 23
        },
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => (fun x => z) (x, y), \u22ef\u27e9))",
        "endPos": {
          "line": 130,
          "column": 28
        }
      },
      {
        "proofState": 7,
        "pos": {
          "line": 136,
          "column": 28
        },
        "goal": "\u03c1 : Weight 0\nz : \u2102\n\u22a2 \u03c1.IsTrivial",
        "endPos": {
          "line": 136,
          "column": 33
        }
      },
      {
        "proofState": 8,
        "pos": {
          "line": 137,
          "column": 14
        },
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.LeftInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
        "endPos": {
          "line": 137,
          "column": 19
        }
      },
      {
        "proofState": 9,
        "pos": {
          "line": 138,
          "column": 15
        },
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.RightInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
        "endPos": {
          "line": 138,
          "column": 20
        }
      }
    ]
  },
  {
    "file": "FLT/NumberField/InfiniteAdeleRing.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 28,
          "column": 2
        },
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : NumberField L\ninst\u271d : Algebra K L\n\u22a2 L \u2297[K] InfiniteAdeleRing K \u2243A[L]InfiniteAdeleRing L",
        "endPos": {
          "line": 28,
          "column": 7
        }
      }
    ]
  },
  {
    "file": "FLT/NumberField/AdeleRing.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 16,
          "column": 2
        },
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 LocallyCompactSpace (AdeleRing (\ud835\udcde K) K)",
        "endPos": {
          "line": 16,
          "column": 7
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 30,
          "column": 4
        },
        "goal": "case h.refine_1\n\u22a2 IsOpen\n    ({f | \u2200 (v : InfinitePlace \u211a), f v \u2208 Metric.ball 0 1} \u00d7\u02e2\n      {f |\n        \u2200 (v : IsDedekindDomain.HeightOneSpectrum (\ud835\udcde \u211a)),\n          \u2191f v \u2208 IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers \u211a v})",
        "endPos": {
          "line": 30,
          "column": 9
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 105,
          "column": 65
        },
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 \u2200 (k : K), \u2203 U, IsOpen U \u2227 \u21d1(algebraMap K (AdeleRing (\ud835\udcde K) K)) \u207b\u00b9' U = {k}",
        "endPos": {
          "line": 105,
          "column": 70
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 115,
          "column": 2
        },
        "goal": "\u22a2 CompactSpace (AdeleRing (\ud835\udcde \u211a) \u211a \u29f8 (algebraMap \u211a (AdeleRing (\ud835\udcde \u211a) \u211a)).toAddMonoidHom.range)",
        "endPos": {
          "line": 115,
          "column": 7
        }
      },
      {
        "proofState": 4,
        "pos": {
          "line": 121,
          "column": 2
        },
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 CompactSpace (AdeleRing (\ud835\udcde K) K \u29f8 (algebraMap K (AdeleRing (\ud835\udcde K) K)).toAddMonoidHom.range)",
        "endPos": {
          "line": 121,
          "column": 7
        }
      },
      {
        "proofState": 5,
        "pos": {
          "line": 136,
          "column": 2
        },
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : NumberField L\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra K (AdeleRing (\ud835\udcde L) L)\ninst\u271d : IsScalarTower K L (AdeleRing (\ud835\udcde L) L)\n\u22a2 AdeleRing (\ud835\udcde K) K \u2192A[K] AdeleRing (\ud835\udcde L) L",
        "endPos": {
          "line": 136,
          "column": 7
        }
      },
      {
        "proofState": 6,
        "pos": {
          "line": 149,
          "column": 2
        },
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : NumberField L\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra K (AdeleRing (\ud835\udcde L) L)\ninst\u271d : IsScalarTower K L (AdeleRing (\ud835\udcde L) L)\n\u22a2 L \u2297[K] AdeleRing (\ud835\udcde K) K \u2243A[L]AdeleRing (\ud835\udcde L) L",
        "endPos": {
          "line": 149,
          "column": 7
        }
      }
    ]
  },
  {
    "file": "FLT/AutomorphicRepresentation/Example.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 307,
          "column": 28
        },
        "goal": "x : QHat\n\u22a2 (\u2203 N z, IsCoprime N z \u2227 x = (1 / \u2191\u2191N) \u2297\u209c[\u2124] z) \u2227\n    \u2200 (N\u2081 N\u2082 : \u2115+) (z\u2081 z\u2082 : ZHat),\n      IsCoprime N\u2081 z\u2081 \u2227 IsCoprime N\u2082 z\u2082 \u2227 (1 / \u2191\u2191N\u2081) \u2297\u209c[\u2124] z\u2081 = (1 / \u2191\u2191N\u2082) \u2297\u209c[\u2124] z\u2082 \u2192 N\u2081 = N\u2082 \u2227 z\u2081 = z\u2082",
        "endPos": {
          "line": 307,
          "column": 33
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 411,
          "column": 74
        },
        "goal": "\u22a2 unitsratsub \u2293 unitszHatsub = unitszsub",
        "endPos": {
          "line": 411,
          "column": 79
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 414,
          "column": 66
        },
        "goal": "\u22a2 unitsratsub \u2294 unitszHatsub = \u22a4",
        "endPos": {
          "line": 414,
          "column": 71
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 994,
          "column": 29
        },
        "goal": "\u22a2 Function.Injective \u21d1j\u2081",
        "endPos": {
          "line": 994,
          "column": 34
        }
      },
      {
        "proofState": 4,
        "pos": {
          "line": 1001,
          "column": 29
        },
        "goal": "\u22a2 Function.Injective \u21d1j\u2082",
        "endPos": {
          "line": 1001,
          "column": 34
        }
      },
      {
        "proofState": 5,
        "pos": {
          "line": 1005,
          "column": 2
        },
        "goal": "z : D^\n\u22a2 \u2203 N z', z = j\u2081 ((\u2191\u2191N)\u207b\u00b9 \u2297\u209c[\u2124] 1) * j\u2082 z'",
        "endPos": {
          "line": 1005,
          "column": 7
        }
      },
      {
        "proofState": 6,
        "pos": {
          "line": 1007,
          "column": 82
        },
        "goal": "z : D^\u02e3\n\u22a2 \u2203 u v, \u2191z = j\u2081 \u2191u * j\u2082 \u2191v",
        "endPos": {
          "line": 1007,
          "column": 87
        }
      }
    ]
  },
  {
    "file": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 167,
          "column": 2
        },
        "goal": "R : Type u_1\nS : Type u_2\nM : Type u_3\ninst\u271d\u00b9\u00b2 : CommRing R\ninst\u271d\u00b9\u00b9 : TopologicalSpace R\ninst\u271d\u00b9\u2070 : TopologicalRing R\ninst\u271d\u2079 : CommRing S\ninst\u271d\u2078 : TopologicalSpace S\ninst\u271d\u2077 : TopologicalRing S\ninst\u271d\u2076 : Algebra R S\ninst\u271d\u2075 : Module.Finite R S\ninst\u271d\u2074 : IsModuleTopology R S\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\ninst\u271d\u00b9 : Module S M\ninst\u271d : IsScalarTower R S M\n\u22a2 moduleTopology R M = moduleTopology S M",
        "endPos": {
          "line": 167,
          "column": 7
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 202,
          "column": 2
        },
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u2076 : CommRing R\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : TopologicalRing R\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : TopologicalSpace S\ninst\u271d\u00b9 : TopologicalRing S\ninst\u271d : Algebra R S\nhcont : Continuous \u21d1(algebraMap R S)\nhopen : IsOpenMap \u21d1(algebraMap R S)\n\u22a2 IsModuleTopology R S",
        "endPos": {
          "line": 202,
          "column": 7
        }
      }
    ]
  },
  {
    "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 62,
          "column": 2
        },
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\nx : \u2124_[p]\ns : Submodule \u2124_[p] \u211a_[p]\n\u22a2 \u2191((x \u2022 s.toAddSubgroup).relindex s.toAddSubgroup) = \u2016x\u2016\u208a\u207b\u00b9",
        "endPos": {
          "line": 62,
          "column": 7
        }
      }
    ]
  },
  {
    "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 26,
          "column": 69
        },
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableInv G\n\u22a2 Measurable Inv.inv",
        "endPos": {
          "line": 26,
          "column": 74
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 33,
          "column": 28
        },
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableMul G\nc : \u21a5H\n\u22a2 Measurable fun x => c * x",
        "endPos": {
          "line": 33,
          "column": 33
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 38,
          "column": 28
        },
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulLeftInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => g * x) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
        "endPos": {
          "line": 38,
          "column": 33
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 43,
          "column": 29
        },
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulRightInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => x * g) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
        "endPos": {
          "line": 43,
          "column": 34
        }
      }
    ]
  },
  {
    "file": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 24,
          "column": 57
        },
        "goal": "F : Type u_1\ninst\u271d\u00b9\u2070 : Field F\ninst\u271d\u2079 : NumberField F\ninst\u271d\u2078 : NumberField.IsTotallyReal F\nD : Type u_2\ninst\u271d\u2077 : Ring D\ninst\u271d\u2076 : Algebra F D\nR : Type u_3\ninst\u271d\u2075 : Field R\nW : Type u_4\ninst\u271d\u2074 : AddCommGroup W\ninst\u271d\u00b3 : Module R W\ninst\u271d\u00b2 : DistribMulAction D\u02e3 W\ninst\u271d\u00b9 : SMulCommClass R D\u02e3 W\nU : Subgroup (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)\u02e3\n\u03c7 : (FiniteAdeleRing (\ud835\udcde F) F)\u02e3 \u2192* R\ninst\u271d : FiniteDimensional R W\n\u22a2 FiniteDimensional R (AutomorphicForm F D R W U \u03c7)",
        "endPos": {
          "line": 24,
          "column": 62
        }
      }
    ]
  },
  {
    "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
    "sorries": [
      {
        "proofState": 0,
        "pos": {
          "line": 219,
          "column": 2
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\nw : HeightOneSpectrum B\nhvw : v = comap A w\n\u22a2 let inst_alg := (\u2191(adicCompletionComapSemialgHom A K L B v w hvw)).toAlgebra;\n  IsModuleTopology (adicCompletion K v) (adicCompletion L w)",
        "endPos": {
          "line": 219,
          "column": 7
        }
      },
      {
        "proofState": 1,
        "pos": {
          "line": 265,
          "column": 2
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\nw : HeightOneSpectrum B\nhvw : v = comap A w\n\u22a2 let inst_alg := (Pi.ringHom fun w => \u2191(adicCompletionComapSemialgHom A K L B v \u2191w \u22ef)).toAlgebra;\n  IsModuleTopology (adicCompletion K v) ((w : { w // v = comap A w }) \u2192 adicCompletion L \u2191w)",
        "endPos": {
          "line": 265,
          "column": 7
        }
      },
      {
        "proofState": 2,
        "pos": {
          "line": 285,
          "column": 2
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective \u21d1(tensorAdicCompletionComapAlgHom A K L B v)",
        "endPos": {
          "line": 285,
          "column": 7
        }
      },
      {
        "proofState": 3,
        "pos": {
          "line": 307,
          "column": 24
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Continuous (adicCompletionComapAlgEquiv A K L B v).toFun",
        "endPos": {
          "line": 307,
          "column": 29
        }
      },
      {
        "proofState": 4,
        "pos": {
          "line": 308,
          "column": 25
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Continuous (adicCompletionComapAlgEquiv A K L B v).invFun",
        "endPos": {
          "line": 308,
          "column": 30
        }
      },
      {
        "proofState": 5,
        "pos": {
          "line": 368,
          "column": 77
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 \u2203 S,\n    \u2200 v \u2209 S,\n      ((AlgHom.restrictScalars B (tensorAdicCompletionComapAlgHom A K L B v)).comp\n            (tensorAdicCompletionIntegersTo A K L B v)).range =\n        Subalgebra.pi Set.univ fun x => adicCompletionIntegersSubalgebra L \u2191x",
        "endPos": {
          "line": 368,
          "column": 82
        }
      },
      {
        "proofState": 6,
        "pos": {
          "line": 388,
          "column": 4
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Function.Bijective \u21d1(baseChange A K L B).baseChange_of_algebraMap",
        "endPos": {
          "line": 388,
          "column": 9
        }
      },
      {
        "proofState": 7,
        "pos": {
          "line": 397,
          "column": 84
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChange A K L B) x).IsFiniteAdele",
        "endPos": {
          "line": 397,
          "column": 89
        }
      },
      {
        "proofState": 8,
        "pos": {
          "line": 405,
          "column": 2
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChangeEquiv A K L B) (1 \u2297\u209c[K] x)).IsFiniteAdele",
        "endPos": {
          "line": 405,
          "column": 7
        }
      },
      {
        "proofState": 9,
        "pos": {
          "line": 457,
          "column": 2
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 IsModuleTopology (FiniteAdeleRing A K) (FiniteAdeleRing B L)",
        "endPos": {
          "line": 457,
          "column": 7
        }
      },
      {
        "proofState": 10,
        "pos": {
          "line": 468,
          "column": 4
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Function.Bijective \u21d1(baseChange A K L B).baseChange_of_algebraMap",
        "endPos": {
          "line": 468,
          "column": 9
        }
      },
      {
        "proofState": 11,
        "pos": {
          "line": 473,
          "column": 22
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.toFun",
        "endPos": {
          "line": 473,
          "column": 27
        }
      },
      {
        "proofState": 12,
        "pos": {
          "line": 474,
          "column": 23
        },
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.invFun",
        "endPos": {
          "line": 474,
          "column": 28
        }
      }
    ]
  }
]